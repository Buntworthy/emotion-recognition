rng('default');
dataRoot = 'data';
imageSize = [48, 48, 1];
train = imageDatastore(fullfile(dataRoot, 'Training'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');

val = imageDatastore(fullfile(dataRoot, 'PublicTest'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');

test = imageDatastore(fullfile(dataRoot, 'PrivateTest'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');

augmenter = imageDataAugmenter('RandRotation', [-20, 20], ...
                                 'RandXTranslation', [-4, 4], ...
                                 'RandYTranslation', [-4, 4], ...
                                 'RandXReflection', true, ...
                                 'RandXShear', [-3, 3], ...
                                 'RandXScale', [0.95, 1.05], ...
                                 'RandYScale', [0.95, 1.05]);

augmentedTrain = augmentedImageDatastore(imageSize, train, ...
                                                'DataAugmentation', augmenter);

ObjFcn = @(x) bayesianNetworkTraining(x, numel(unique(train.Labels)), augmentedTrain, val);

    
optimVars = [
        optimizableVariable('NetworkDepth',[0, 3],'Type','integer')
        optimizableVariable('Length', [1, 4], 'Type', 'integer')
        optimizableVariable('DropOutFactor', [0, 0.25])
        optimizableVariable('InitialLearnRate',[1e-5, 1e-2],'Transform','log')
        optimizableVariable('L2Regularization',[1e-10, 1e-2],'Transform','log')];

BayesObject = bayesopt(ObjFcn, optimVars,...
    'MaxObj',Inf,...
    'MaxTime',11*60*60,...
    'IsObjectiveDeterministic',false,...
    'UseParallel',false);
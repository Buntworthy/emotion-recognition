rng('default');
dataRoot = '.';
images = imageDatastore(dataRoot, 'IncludeSubfolders', true, ...
                            'LabelSource', 'foldernames');
[train, val, test] = splitEachLabel(images, 0.7, 0.15, 0.15);

augmenter = imageDataAugmenter('RandRotation', [-20, 20], ...
                                 'RandXTranslation', [-4, 4], ...
                                 'RandYTranslation', [-4, 4], ...
                                 'RandXReflection', true, ...
                                 'RandXShear', [-3, 3], ...
                                 'RandXScale', [0.95, 1.05], ...
                                 'RandYScale', [0.95, 1.05]);

augmentedTrain = augmentedImageDatastore([48, 48, 1], train);

%% Make network
layers = makeSimpleNet([48, 48, 1], numel(unique(images.Labels)));

logger = kifu.Logger('fer2013', 'verySimple');
options = trainingOptions('adam', ...
                        'ExecutionEnvironment', 'cpu', ...
                        'MiniBatchSize', 32, ...
                        'MaxEpochs', 8, ...
                        'InitialLearnRate', 0.001, ...
                        'LearnRateSchedule', 'piecewise', ...
                        'LearnRateDropPeriod', 2, ...
                        'LearnRateDropFactor', 0.5, ...
                        'ValidationData', val, ...
                        'ValidationPatience', Inf, ...
                        'OutputFcn', @logger.log, ...
                        'Verbose', true);
                   
net = trainNetwork(augmentedTrain, layers, options);

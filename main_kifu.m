rng('default');
dataRoot = 'data';
train = imageDatastore(fullfile(dataRoot, 'Training'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');

val = imageDatastore(fullfile(dataRoot, 'PublicTest'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');

test = imageDatastore(fullfile(dataRoot, 'PrivateTest'), ...
                        'IncludeSubfolders', true, ...
                        'LabelSource', 'foldernames');
                    
augmenter = imageDataAugmenter('RandRotation', [-20, 20], ...
                                 'RandXTranslation', [-4, 4], ...
                                 'RandYTranslation', [-4, 4], ...
                                 'RandXReflection', true, ...
                                 'RandXShear', [-3, 3], ...
                                 'RandXScale', [0.95, 1.05], ...
                                 'RandYScale', [0.95, 1.05]);

augmentedTrain = augmentedImageDatastore([48, 48, 1], train);

layers = makeBarsoumNet(numel(unique(train.Labels)));

logger = kifu.Logger('fer2013plus', 'barsoumnet', false);
options = trainingOptions('adam', ...
                        'ExecutionEnvironment', 'cpu', ...
                        'MiniBatchSize', 32, ...
                        'MaxEpochs', 5, ...
                        'InitialLearnRate', 0.001, ...
                        'LearnRateSchedule', 'piecewise', ...
                        'LearnRateDropPeriod', 5, ...
                        'LearnRateDropFactor', 0.2, ...
                        'ValidationData', val, ...
                        'ValidationPatience', Inf, ...
                        'OutputFcn', @logger.log, ...
                        'Verbose', true);
                   
net = trainNetwork(augmentedTrain, layers, options);

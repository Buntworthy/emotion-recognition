function net = main
    rng('default');

    note = 'Small train barsoumnet adam rate div 3';
    logger = kifu.Logger('fer2013plus', '', true, note);

    dataRoot = 'data';
    imageSize = [48, 48, 1];
    train = imageDatastore(fullfile(dataRoot, 'Training'), ...
                            'IncludeSubfolders', true, ...
                            'LabelSource', 'foldernames');

    val = imageDatastore(fullfile(dataRoot, 'PublicTest'), ...
                            'IncludeSubfolders', true, ...
                            'LabelSource', 'foldernames');

    test = imageDatastore(fullfile(dataRoot, 'PrivateTest'), ...
                            'IncludeSubfolders', true, ...
                            'LabelSource', 'foldernames');

    augmenter = imageDataAugmenter('RandRotation', [-20, 20], ...
                                     'RandXTranslation', [-4, 4], ...
                                     'RandYTranslation', [-4, 4], ...
                                     'RandXReflection', true, ...
                                     'RandXShear', [-3, 3], ...
                                     'RandXScale', [0.95, 1.05], ...
                                     'RandYScale', [0.95, 1.05]);

    augmentedTrain = augmentedImageDatastore(imageSize, train);

    layers = makeBarsoumNet(imageSize, numel(unique(train.Labels)));

    options = trainingOptions('adam', ...
                            'ExecutionEnvironment', 'cpu', ...
                            'MiniBatchSize', 64, ...
                            'MaxEpochs', 60, ...
                            'InitialLearnRate', 0.001/3, ...
                            'LearnRateSchedule', 'piecewise', ...
                            'LearnRateDropPeriod', 20, ...
                            'LearnRateDropFactor', 0.33, ...
                            'ValidationData', val, ...
                            'ValidationPatience', Inf, ...
                            'OutputFcn', @logger.log, ...
                            'Verbose', true);

    net = trainNetwork(augmentedTrain, layers, options);
end
